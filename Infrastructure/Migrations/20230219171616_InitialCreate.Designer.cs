// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechProccessAccounting.Infrastructure.Data;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230219171616_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.Material", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.ProductAssembly", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("ProductAssemblies");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.ProductDetail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.ProductionLine", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("ProductionLines");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.ProductionLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("ProductAssemblyID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ProductAssemblyID");

                    b.ToTable("ProductionLogs");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.ProductionOperation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("ProductionOperations");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.ProductionOperationLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProductAssemblyID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("ProductDetailID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ProductQuality")
                        .HasColumnType("int");

                    b.Property<decimal>("ProductQuantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductionLineID")
                        .HasColumnType("int");

                    b.Property<int>("ProductionOperationID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("ProductAssemblyID");

                    b.HasIndex("ProductDetailID");

                    b.HasIndex("ProductionLineID");

                    b.HasIndex("ProductionOperationID");

                    b.ToTable("ProductionOperationLogs");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.Shift", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.ProductionLog", b =>
                {
                    b.HasOne("TechProccessAccounting.Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechProccessAccounting.Core.Entities.ProductAssembly", "ProductAssembly")
                        .WithMany()
                        .HasForeignKey("ProductAssemblyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ProductAssembly");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.ProductionOperationLog", b =>
                {
                    b.HasOne("TechProccessAccounting.Core.Entities.ProductAssembly", "ProductAssembly")
                        .WithMany()
                        .HasForeignKey("ProductAssemblyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechProccessAccounting.Core.Entities.ProductDetail", "ProductDetail")
                        .WithMany()
                        .HasForeignKey("ProductDetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechProccessAccounting.Core.Entities.ProductionLine", "ProductionLine")
                        .WithMany()
                        .HasForeignKey("ProductionLineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TechProccessAccounting.Core.Entities.ProductionOperation", "ProductionOperation")
                        .WithMany()
                        .HasForeignKey("ProductionOperationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductAssembly");

                    b.Navigation("ProductDetail");

                    b.Navigation("ProductionLine");

                    b.Navigation("ProductionOperation");
                });

            modelBuilder.Entity("TechProccessAccounting.Core.Entities.Shift", b =>
                {
                    b.HasOne("TechProccessAccounting.Core.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
